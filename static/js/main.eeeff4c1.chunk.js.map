{"version":3,"sources":["components/SearchBar.jsx","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","components/Ciudad.jsx","components/Home.jsx","containers/App.js","index.js"],"names":["SearchBar","onSearch","useState","city","setCity","className","onSubmit","e","preventDefault","target","reset","type","placeholder","onChange","value","Nav","to","src","width","height","alt","Card","min","max","name","img","onClose","id","onClick","Cards","cities","obt","length","map","c","key","Ciudad","temp","weather","wind","clouds","latitud","longitud","Home","App","setCities","setObt","oldCities","filter","oldObt","nam","ciudad","fetch","then","r","json","recurso","undefined","main","includes","swal","title","text","icon","timer","Math","round","temp_min","temp_max","speed","all","coord","lat","lon","onFilter","ciudadId","parseInt","exact","path","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eeeff4c1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport './SearchBar.css'\r\nimport {BiSearchAlt2} from 'react-icons/bi'\r\n\r\nexport default function SearchBar({onSearch}) {\r\n  const [city, setCity] = useState(\"\");\r\n  return (\r\n    <div className='search-cont'>\r\n      <form onSubmit={(e) => {\r\n        e.preventDefault();\r\n        onSearch(city);\r\n        e.target.reset()\r\n      }}>\r\n        <BiSearchAlt2 className='icon-search' />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar...\"\r\n          className='search'\r\n          onChange={e => setCity(e.target.value)} \r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBar from './SearchBar.jsx';\r\nimport './Nav.css';\r\n\r\n\r\nfunction Nav({onSearch}) {\r\n  return (\r\n      <nav className=\"navbar navbar\">\r\n          <Link to='/'>\r\n          <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTWwrphZt9rTIUP9B-hv3jdzEPLGjHdb0JfPg&usqp=CAU' width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n            <span className=\"navbar-brand\">\r\n              Cilma AB\r\n            </span>\r\n          </Link>\r\n          <SearchBar\r\n            onSearch={onSearch}\r\n          />\r\n      </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './Card.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Card ({min, max, name, img, onClose, id}) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div id=\"closeIcon\" className=\"row\">\r\n            <button onClick={onClose} className=\"btn btn-sm btn-danger\">X</button>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Link to={`/ciudad/${id}`} className=\"card-title\">\r\n              <h5 >{name}</h5>\r\n          </Link>\r\n          <div className=\"row\">\r\n            <div className=\"min-max\">\r\n              <div className=\"min\">\r\n                <p>Min</p>\r\n                <p>{min}°</p>\r\n              </div>\r\n              <div className=\"max\">\r\n                <p>Max</p>\r\n                <p>{max}°</p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <img className=\"iconoClima\" src={\"http://openweathermap.org/img/wn/\"+img+\"@2x.png\"} width=\"80\" height=\"80\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './Cards.css';\r\nimport {ImSmile} from 'react-icons/im'\r\nimport Card from './Card.jsx';\r\n\r\nexport default function Cards({cities, onClose ,obt}) {\r\n  return (\r\n    <>\r\n    {obt.length ?    \r\n      <div className='cards'>\r\n        {cities.map(c => <Card\r\n            id ={c.id}\r\n            key={c.id}\r\n            max={c.max}\r\n            min={c.min}\r\n            name={c.name}\r\n            img={c.img}\r\n            onClose={() => onClose(c.id , c.name)}\r\n          /> )}\r\n      </div> : \r\n      <div className='msj'> \r\n        <h5>Puedes buscar el clima de la ciudad que desees <ImSmile /> </h5>\r\n      </div>\r\n      \r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './Ciudad.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {BsArrowLeft} from 'react-icons/bs'\r\n\r\nexport default function Ciudad({city}) {\r\n    if(!city) return(\r\n        <div>No se encuentra ninguna ciudad</div>\r\n    )\r\n    return (\r\n        <>\r\n            <Link to='/busqueda'> \r\n                <div className='last'>\r\n                    <BsArrowLeft />\r\n                </div>\r\n             </Link>\r\n            <div className=\"ciudad animate__animated animate__backInUp animate__delay-1s\">\r\n                    <div className=\"cont\">\r\n                        <h2>{city.name}</h2>\r\n                        <div className=\"info\">\r\n                            <div>Temperatura: {city.temp} ºC</div>\r\n                            <div>Clima: {city.weather}</div>\r\n                            <div>Viento: {city.wind} km/h</div>\r\n                            <div>Cantidad de nubes: {city.clouds}</div>\r\n                            <div>Latitud: {city.latitud}º</div>\r\n                            <div>Longitud: {city.longitud}º</div>\r\n                        </div>\r\n                </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport './Home.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Home = () =>{\r\n\r\n    return(\r\n        <div className='inHome'>\r\n            <div className='box-title animate__animated animate__backInLeft animate__delay-2s'>\r\n                <h3 className='title'>\r\n                    El clima del mundo en un solo lugar </h3>\r\n                <div className='content-link'>\r\n                    <NavLink to='/busqueda' className='link'>\r\n                            Presiona aquí para entrar\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState } from 'react';\r\nimport {Route , HashRouter as Router} from 'react-router-dom';\r\nimport './App.css';\r\nimport Nav from '../components/Nav.jsx';\r\nimport Cards from '../components/Cards.jsx';\r\nimport Ciudad from '../components/Ciudad.jsx';\r\nimport swal from 'sweetalert' \r\nimport Home from '../components/Home';\r\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  const [obt , setObt] = useState([]);\r\n  \r\n  function onClose(id , name) {\r\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\r\n    setObt(oldObt => oldObt.filter(nam => nam !== name))\r\n  }\r\n  function onSearch(ciudad) {\r\n    //Llamado a la API del clima\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&units=metric&appid=${apiKey}`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          if(obt.includes(recurso.name)) {swal({\r\n            title:'Error',\r\n            text: 'Ya has ingresado esta ciudad',\r\n            icon: 'error',\r\n            timer:'2000',\r\n          })}\r\n          else{\r\n            const ciudad = {\r\n              min: Math.round(recurso.main.temp_min),\r\n              max: Math.round(recurso.main.temp_max),\r\n              img: recurso.weather[0].icon,\r\n              id: recurso.id,\r\n              wind: recurso.wind.speed,\r\n              temp: recurso.main.temp,\r\n              name: recurso.name,\r\n              weather: recurso.weather[0].main,\r\n              clouds: recurso.clouds.all,\r\n              latitud: recurso.coord.lat,\r\n              longitud: recurso.coord.lon\r\n            };\r\n            setCities(oldCities => [...oldCities, ciudad]);\r\n            setObt(oldObt => [...oldObt , recurso.name])\r\n          }\r\n\r\n        } else {\r\n          swal({\r\n            title:'Error',\r\n            text: 'No se encontro la ciudad ingresada',\r\n            icon: 'error',\r\n            timer:'2000',\r\n          })\r\n        }\r\n      });\r\n  }\r\n  function onFilter(ciudadId) {\r\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\r\n    if(ciudad.length > 0) {\r\n        return ciudad[0];\r\n    } else {\r\n        return null;\r\n    }\r\n  }\r\n  return (\r\n    <div className='contenido'>\r\n      <Router>\r\n          <Route\r\n              exact path='/'\r\n              render = {() => <Home />}\r\n          />\r\n          \r\n          <Route\r\n              path='/busqueda'\r\n              render={() => \r\n              <Nav onSearch={onSearch} />}\r\n          />\r\n          <Route exact path='/busqueda'\r\n                render={() =>\r\n                <Cards cities={cities} onClose={onClose} obt={obt} />}\r\n          />\r\n          <Route\r\n              exact\r\n              path='/ciudad/:id'\r\n              render={({match}) => <Ciudad city={onFilter(match.params.id)} />}\r\n          />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}